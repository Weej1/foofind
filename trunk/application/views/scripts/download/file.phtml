<?php

function formatLength($text)
{
    $secs = (int)$text;
    $mins = 0;
    if ($secs>59) {
        $mins = $secs/60;
        $secs = $secs%60;
        if ($mins>59) {
            $hours = $mins/60;
            $mins = $mins%60;
        }
    }
    if ($hours)
        return sprintf("%d:%02d:%02d", $hours, $mins, $secs);
    else
        return sprintf("%d:%02d", $mins, $secs);
}

function formatAudio($context, $md)
{
    $res = "<table>";
    if ($title = $md["audio:title"]){
        $res .= '<tr><td>'.$context->translate("Title").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($title)."'>".htmlentities($title)."</a>";
         if ($len = $md["audio:seconds"])
            $res .= "&nbsp;(".formatLength($len).')';

        echo '</td></tr>';

    }
    if ($artist = $md["audio:artist"]){
        $res .= '<tr><td>'.$context->translate("Artist").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($artist)."'>".htmlentities($artist)."</a></td></tr>";}
   
    if ($album = $md["audio:album"]) {
        $res .= '<tr><td>'.$context->translate("Album").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($album)."'>".htmlentities($album)."</a>";
        if (($year = $md["audio:year"]) && is_numeric($year) && $year>1901 && $year<2100)
            $res .= "&nbsp;($year)";
        
        echo '</td></tr>';
    }
     if ($track = $md["audio:track"]) $res .=  "<tr><td>".$context->translate("Track").":</td><td>$track</td></tr>";
    if ($genre = $md["audio:genre"]) $res .=  "<tr><td>".$context->translate("Genre").":</td><td>$genre</td></tr>";
    if ($bitrate = $md["audio:bitrate"]) $res .= "<tr><td>". $context->translate("Quality").":</td><td>$bitrate&nbsp;kbit/s.&nbsp;". $md["audio:soundtype"]."</td></tr>";
    return $res.'</table>';
}

function formatDocument($context, $md, $show_title)
{
    $res = "<table>";

    if  ( ($title = $md["book:title"]) || ($title = $md["document:title"]) ){
        $res .= '<tr><td>'.$context->translate("Title").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($title)."'>".htmlentities($title, ENT_QUOTES, "UTF-8")."</a></td></tr>";
        }
    if ( ($author = $md["book:author"]) || ($author = $md["document:author"]) ) {
        $res .= '<tr><td>'.$context->translate("Author").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($author)."'>".htmlentities($author, ENT_QUOTES, "UTF-8")."</a></td></tr>";
    }
    if ($format = $md["document:format"]) {
        $res .= '<tr><td>'.$context->translate("Format").":</td><td>$format";
        if ($fversion = $md["document:formatversion"])
            $res .= "&nbsp;v.$fversion";
        $res .= "</td></tr>";
    }

    if ($pages = (int)$md["document:pages"])
         $res .= '<tr><td>'.$context->translate("Pages").":</td><td>$pages</td></tr>";

    if ($version = (int)$md["document:version"]) {
        $res .= '<tr><td>'.$context->translate("Version").":</td><td>$version";
        if ($revision = $md["document:revision"])
            $res .= "&nbsp;$revision";
        $res .= "</td></tr>";
    }
    return $res.'</table>';
}

function formatImage($context, $md)
{
    $res = "<table>";

    if ($title = $md["image:title"])
        $res .= '<tr><td>'.$context->translate("Title").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($title)."'>".htmlentities($title, ENT_QUOTES, "UTF-8")."</a></td></tr>";

    if ($artist = $md["image:artist"])
        $res .= '<tr><td>'.$context->translate("Artist").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($artist)."'>".htmlentities($artist, ENT_QUOTES, "UTF-8")."</a></td></tr>";

    if ($desc = $md["image:description"])
        $res .= '<tr><td>'.$context->translate("Description").":</td><td>".htmlentities($desc)."</td></tr>";

    if (($width = $md["image:width"]) && ($height = $md["image:height"]))
        $res .= '<tr><td>'.$context->translate("Size").":</td><td>{$width}x$height</td></tr>";

    if ($colors = (int)$md["image:colors"])
         $res .= '<tr><td>'.$context->translate("Colors").":</td><td>$colors</td></tr>";

    return $res.'</table>';
}

function formatVideo($context, $md)
{
    $res = "<table>";

    if ($title = $md["video:title"]) {
        $res .= '<tr><td>'.$context->translate("Title").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($title)."'>".htmlentities($title, ENT_QUOTES, "UTF-8")."</a>";

        if (($len = $md["video:minutes"]*60) || ($len = $md["video:length"]))
            $res .= '&nbsp;('.formatLength($len).")";
        $res .= '</td></tr>';
    } else {
        if (($len = $md["video:minutes"]*60) || ($len = $md["video:length"]))
            $res .= '<tr><td>'.$context->translate("Length").':</td><td>'.formatLength($len)."</td></tr>";
    }
    if ($artist = $md["video:artist"])
        $res .= '<tr><td>'.$context->translate("Artist").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($artist)."'>".htmlentities($artist, ENT_QUOTES, "UTF-8")."</a></td></tr>";
        
    if (($width = $md["video:width"]) && ($height = $md["video:height"]))
        $res .= '<tr><td>'.$context->translate("Size").":</td><td>{$width}x$height</td></tr>";

    if ($fps = (int)$md["video:framerate"]) {
         $res .= '<tr><td>'.$context->translate("Quality").":</td><td>$fps fps";
         if ($codec = $md["video:codec"]) $res .= ' '.htmlentities($codec, ENT_QUOTES, "UTF-8");
         $res .= '</td></tr>';
    }
    return $res.'</table>';
}

function formatSoftware($context, $md, $show_title)
{
    $res = "<table>";

    if ($title = $md["application:title"]) {
        $res .= '<tr><td>'.$context->translate("Title").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($title)."'>".htmlentities($title, ENT_QUOTES, "UTF-8")."</a>";

        if ($version = $md["application:version"])
            $res .= "&nbsp;$version";
        $res .= '</td></tr>';
    }

    if ($fversion = $md["application:fileversion"])
        $res .= '<tr><td>'.$context->translate("Version").":</td><td>$fversion</a></td></tr>";

    if ($os = $md["application:os"])
         $res .= '<tr><td>'.$context->translate("OS").":</td><td>$os</td></tr>";

    return $res.'</table>';
}

function formatArchive($context, $md, $show_title)
{
    $res = "<table>";

    if (($title = $md["archive:title"]) || ($title = $md["archive:name"]))
        $res .= '<tr><td>'.$context->translate("Title").":</td><td><a href='/{$context->lang}/search/?q=".urlencode($title)."'>".htmlentities($title, ENT_QUOTES, "UTF-8")."</a>";
    if ($files = $md["archive:files"])
        $res .= '<tr><td>'.$context->translate("Files").":</td><td>".htmlentities($files, ENT_QUOTES, "UTF-8")."</td></tr>";
    if ($folders = $md["archive:folders"])
        $res .= '<tr><td>'.$context->translate("Folders").":</td><td>".htmlentities($folders, ENT_QUOTES, "UTF-8")."</td></tr>";
    if ($usize = $md["archive:unpackedsize"])
        $res .= '<tr><td>'.$context->translate("Unpacked size").":</td><td>".formatSize($usize)."</td></tr>";

    return $res.'</table>';
}

 function formatSize($bytes)
    {
        $size = $bytes / 1024;
        if($size < 1024)
        {
            $size = number_format($size, 2);
            $size .= ' KB';
        }
        else
        {
            if ($size / 1024 < 1024)
            {
                $size = number_format($size / 1024, 2);
                $size .= ' MB';
            }
            else if ($size / 1024 / 1024 < 1024)
            {
                $size = number_format($size / 1024 / 1024, 2);
                $size .= ' GB';
            }
        }
        return $size;
    }


function convertS2String($time) {
  $mins = floor($time / 60);
  $secs = floatval(($time % 60) / 100);
  $time = $mins+$secs.' min.';
  return $time;

}

foreach ($this->sources as $key => $val) {
        $t = $val['Type'];
        unset($mlinkadd2);
        switch ($t)
        {
            case 1: //GNUTELLA
                $tip = "Gnutella";
                $source = "gnutella";
                $mlinkadd = "&xt=urn:sha1:".$val['Uri'];
                break;
            case 2: //ED2K
                $tip = "ED2K";
                $source = "ed2k";
                $link = "ed2k://|file|".str_replace(' ', '+', $this->file['Filename'])."|".$this->file['Size']."|".$val['Uri']."|/";
                $mlinkadd2 = "&xt=urn:ed2k:".$val['Uri'];
                break;
            case 3: // TORRENT
                $tip = "Torrent";
                $source = "torrent";
                $link = $val['Uri'];
                break;
            case 5: //TIGER HASH
                $tip = "Gnutella";
                $source = "gnutella";
                $mlinkadd = "&xt=urn:tiger:".$val['Uri'];
                break;
            case 6: //MD5 HASH
                $tip = "Gnutella";
                $source = "gnutella";
                $mlinkadd = "&xt=urn:md5:".$val['Uri'];
                break;
            case 7: //BTH HASH
                $tip = "Torrent";
                $source = "tmagnet";
                $link = "magnet:?xl=".$this->file['Size']."&dn=".str_replace(' ', '+', $this->file['Filename'])."&xt=urn:btih:".$val['Uri'];
                $mlinkadd2 = "&xt=urn:btih:".$val['Uri'];
                break;
            case 4: // JAMENDO
            case 8: // WEB
                $tip = "Web";
                $source = "web";
                $link = $val['Uri'];
                break;
            case 9: // FTP
                $tip = "FTP";
                $source = "ftp";
                $link = $val['Uri'];
                break;
            default:
                continue;
                break;
        }

        if ($source=="gnutella")
        {
            $rlink = $srcs['gnutella']['rlink'];
            if ($rlink)
                $mlink = $rlink.$mlinkadd;
            else
                $mlink = "magnet:?xl=".$this->file['Size']."&dn=".str_replace(' ', '+', $this->file['Filename']).$mlinkadd;
            $link = $mlink;
        } elseif (isset($mlinkadd2))
        {
            $srcs['gnutella']['flink'] .= $mlinkadd2;
        }

        $srcs[$source]['link'] = htmlentities($link, ENT_QUOTES, "UTF-8");
        $srcs[$source]['rlink'] = $link;
        $srcs[$source]['tip'] = $tip;
        $srcs[$source]['count'] += $val['MaxSources'];
}
foreach ($this->metadata as $key => $val)
{
    if (($val['KeyMD']=='torrent:trackers') || ($val['KeyMD']=='torrent:tracker'))
    {
        foreach (explode(' ', $val['ValueMD']) as $tr)
        {
            if ($srcs['gnutella']['link']) {
                $srcs['gnutella']['rlink'] .= '&tr='.urlencode($tr);
                $srcs['gnutella']['link'] = htmlentities($srcs['gnutella']['rlink'], ENT_QUOTES, "UTF-8");

            } else {
                $srcs['tmagnet']['rlink'] .= '&tr='.$tr;
                $srcs['tmagnet']['link'] = htmlentities($srcs['tmagnet']['rlink'], ENT_QUOTES, "UTF-8");
            }
        }
        break;
    } else {
        $md[$val['KeyMD']] = $val['ValueMD'];
    }
}
foreach (array('w'=>'web', 'f'=>'ftp', 't'=>'torrent', 't2'=>'tmagnet', 'g'=>'gnutella', 'e'=>'ed2k') as $srci=>$srcLink)
    if (strstr($this->qs['src'], $srci[0]) && $srcs[$srcLink])
            break;

global $content;
if ($this->qs['type'])
{
    $ctype = $this->qs['type'];
} else {
    try {
        $ctype = $content['assoc'][$this->file["ContentType"]];
    } 
    catch (Exception $ex) {}
}
if (!isset($ctype)) $ctype = 'file';
$ctype = strtolower($ctype);
?>

<div id="container_search">
    <h1>
        <a href="/" ><img  src="/images/foofind_search.gif" alt="File search engine - foofind.com" title="File search engine - foofind.com" /></a>
    </h1>

    <?=$this->form; ?>
    <?if ($this->qs['q']):?>
    <div class="contentype">
        <a class="<?=(preg_match("/^$/",  $this->qs['type']))?"actual":""?>" href="/<?=$this->lang?>/search/<?= ''.$this->qs(array(), array('type'=>1, 'page'=>1)) ?>" ><?=$this->translate('All');?></a>
        <a class="<?=(preg_match("/^Audio$/", $this->qs['type']))?"actual":""?>" href="/<?=$this->lang?>/search/<?= $this->qs(array('type'=>'Audio'), array('page'=>1)) ?>" ><?=$this->translate('Audio');?></a>
        <a class="<?=(preg_match("/^Video$/", $this->qs['type']))?"actual":""?>" href="/<?=$this->lang?>/search/<?= $this->qs(array('type'=>'Video'), array('page'=>1)) ?>" ><?=$this->translate('Video');?></a>
        <a class="<?=(preg_match("/^Image$/", $this->qs['type']))?"actual":""?>" href="/<?=$this->lang?>/search/<?= $this->qs(array('type'=>'Image'), array('page'=>1)) ?>" ><?=$this->translate('Image');?></a>
        <a class="<?=(preg_match("/^Document$/", $this->qs['type']))?"actual":""?>" href="/<?=$this->lang?>/search/<?= $this->qs(array('type'=>'Document'), array('page'=>1)) ?>" ><?=$this->translate('Document');?></a>
        <a class="<?=(preg_match("/^Software$/", $this->qs['type']))?"actual":""?>" href="/<?=$this->lang?>/search/<?= $this->qs(array('type'=>'Software'), array('page'=>1)) ?>" ><?=$this->translate('Software');?></a>
        <a class="<?=(preg_match("/^Archive$/", $this->qs['type']))?"actual":""?>" href="/<?=$this->lang?>/search/<?= $this->qs(array('type'=>'Archive'), array('page'=>1)) ?>" ><?=$this->translate('Archive');?></a>
    </div>
    <?endif?>

    <hr />

    <div class="wrap_download">
    <div class="file_download">
        <h1><?=$this->file['Filename'];?></h1>

        <div class="top_download">
        <div class="download_button">
            <img alt="" src="/images/icons/content_<?=$ctype ?>.gif" /><br />
            <a title="magnet download" class="superlarge magenta awesome" href="<?=$srcs[$srcLink]['link'].$srcs[$srcLink]['flink']?>"><?=$this->translate('Download').
                
                $this->file_size   = ($this->file_size < 1) ? '' : ' ('.$this->file_size.')';?>

            </a>
         </div>
       <?php if ($md):?>
            <div class="download_file_metadata">
            <?php
            $fn = 'format'.ucfirst($ctype);
            echo $fn($this, $md, true);
            ?>
            </div>
       <?php endif; ?>
       </div>

       <?php if ($this->sources): ?>
        <div class="dowload_file_sources">                
                    <? foreach ($srcs as $key => $val):
                        if ($val['link']): ?>
                        <div class="download_source" >
                            <a  title="<?=$val['link'] ?>" href="<?=$val['link'] ?>"><img alt="" src="/images/icons/<?=$key ?>_download.gif" />
                                <?='<b>'.ucfirst ( $val['tip'] ).'</b><span>'.$val['count'].' '.$this->translate('sources');?></span></a>
                                <?='<input onClick="javascript:this.focus();this.select();" type="text"  value="'.$val['link'].'" />'; ?>
                                <? unset ($type, $pinta, $link) ?>
                        </div>

                 <?php  endif;
                       endforeach; ?>

            
        </div>
       <?php endif; ?>

        <? if ($this->lang == 'en') $langcode = 1;
             if ($this->lang == 'es') $langcode = 2;
        ?>

        <div class="sharelinks"><?=$this->translate('Share this:');?>
            <a href="http://www.facebook.com/share.php?u=http://foof.in/<?=$langcode;?>/<?=dechex($this->file['IdFile'] );?>">
                <img alt="<?=$this->translate('share on facebook');?>" src="/images/icons/ico_facebook.gif" border = "0"/></a>
                <a href="mailto:?subject=<?=$this->file['Filename'];?>&body=http://foof.in/<?=$langcode;?>/<?=dechex($this->file['IdFile']);?>">
                <img alt="<?=$this->translate('send by email');?>" src="/images/icons/ico_email_link.png" border = "0"/></a>
                <a href="http://twitter.com/home?status=http://foof.in/<?=$langcode;?>/<?=dechex($this->file['IdFile'] );?>">
                <img alt="<?=$this->translate('share on twitter');?>" src="/images/icons/ico_twitter.png" border = "0"/></a>
        </div>

    </div>


    <div class="download_more_info">
        <h3><?=$this->translate('How to download?'); ?></h3>
        <p><?=$this->translate('DownloadExplanation'); ?></p>
        <p><img title="eDonkey, eMule, MLDonkey, aMule" alt="eDonkey, eMule, MLDonkey, aMule"  src="/images/icons/ed2k.gif" /> eMule, MLDonkey, aMule.</p>
        <p><img title="Gnutella, Frostwire,Limewire, Shareaza, Phex" alt="Gnutella, Frostwire, Limewire, Shareaza, Phex"  src="/images/icons/gnutella.gif" /> Limewire, Shareaza, Phex.</p>
        <p><img title="Torrent, Vuze, µTorrent, Transmission" alt="Torrent, Vuze, µTorrent, Transmission"  src="/images/icons/torrent.gif" /> µTorrent, Transmission.</p>
    </div>


     </div>

</div>
